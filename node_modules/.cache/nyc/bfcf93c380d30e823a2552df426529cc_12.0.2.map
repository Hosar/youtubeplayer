{"version":3,"sources":["youtube.js"],"names":["config","axios","Axios","create","baseURL","youtubeApi","endpoint","YoutubeService","params","part","chart","regionCode","maxResults","key","result","get","then","res","data","items","i","length","id","title","snippet","thumbnail","thumbnails","high","url","publishedAt","fromNow","getVideoDetails","video","viewCount","statistics","likeCount"],"mappings":";;;;;;;;;AAAA;;;;AACA;;IAAYA,M;;AACZ;;;;;;;;;;AAEA,IAAMC,QAAQC,gBAAMC,MAAN,CAAa;AACzBC,WAASJ,OAAOK,UAAP,CAAkBC;AADF,CAAb,CAAd;;IAIaC,c,WAAAA,c;;;;;;;wCACS;AAClB,UAAMC,SAAS;AACbC,cAAM,SADO;AAEbC,eAAO,aAFM;AAGbC,oBAAY,IAHC,EAGK;AAClBC,oBAAY,IAJC;AAKbC,aAAKb,OAAOK,UAAP,CAAkBQ;AALV,OAAf;;AAQA,UAAIC,SAAS,EAAb;;AAEA,aAAOb,MAAMc,GAAN,CAAU,GAAV,EAAe,EAACP,cAAD,EAAf,EAAyBQ,IAAzB,CAA8B,UAASC,GAAT,EAAa;AAChDH,iBAASG,IAAIC,IAAJ,CAASC,KAAlB;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,OAAOO,MAA3B,EAAmCD,GAAnC,EAAwC;AACtCN,iBAAOM,CAAP,IAAY;AACVE,gBAAIR,OAAOM,CAAP,EAAUE,EADJ;AAEVC,mBAAOT,OAAOM,CAAP,EAAUI,OAAV,CAAkBD,KAFf;AAGVE,uBAAWX,OAAOM,CAAP,EAAUI,OAAV,CAAkBE,UAAlB,CAA6BC,IAA7B,CAAkCC,GAHnC;AAIVC,yBAAa,sBAAOf,OAAOM,CAAP,EAAUI,OAAV,CAAkBK,WAAzB,EAAsCC,OAAtC;AAJH,WAAZ;AAMAhB,iBAAOM,CAAP,IAAYb,eAAewB,eAAf,CAA+BjB,OAAOM,CAAP,CAA/B,CAAZ;AACD;;AAED,eAAON,MAAP;AACD,OAbM,CAAP;AAeD;;;oCAEsBkB,K,EAAO;AAC5B,UAAMxB,SAAS;AACbC,cAAM,YADO;AAEba,YAAIU,MAAMV,EAFG;AAGbT,aAAKb,OAAOK,UAAP,CAAkBQ;AAHV,OAAf;;AAMA,aAAOZ,MAAMc,GAAN,CAAU,GAAV,EAAe,EAACP,cAAD,EAAf,EAAyBQ,IAAzB,CAA8B,UAASC,GAAT,EAAc;AACjD,YAAMH,SAASG,IAAIC,IAAnB;AACAc,cAAMC,SAAN,GAAkBnB,OAAO,OAAP,EAAgB,CAAhB,EAAmBoB,UAAnB,CAA8BD,SAAhD;AACAD,cAAMG,SAAN,GAAkBrB,OAAO,OAAP,EAAgB,CAAhB,EAAmBoB,UAAnB,CAA8BC,SAAhD;;AAEA,eAAOH,KAAP;AACD,OANM,CAAP;AAOD","file":"youtube.js","sourceRoot":"/home/hosar/Projects/youtube-trends-node/Code/services","sourcesContent":["import Axios from 'axios';\nimport * as config from '../config.json';\nimport moment from \"moment\";\n\nconst axios = Axios.create({\n  baseURL: config.youtubeApi.endpoint\n});\n\nexport class YoutubeService {\n  getTrendingVideos() {\n    const params = {\n      part: 'snippet',\n      chart: 'mostPopular',\n      regionCode: 'US', // should be replaced with country code from countryList\n      maxResults: '24',\n      key: config.youtubeApi.key\n    };\n\n    let result = [];\n\n    return axios.get('/', {params}).then(function(res){\n      result = res.data.items;\n      for (let i = 0; i < result.length; i++) {\n        result[i] = {\n          id: result[i].id,\n          title: result[i].snippet.title,\n          thumbnail: result[i].snippet.thumbnails.high.url,\n          publishedAt: moment(result[i].snippet.publishedAt).fromNow()\n        };\n        result[i] = YoutubeService.getVideoDetails(result[i]);\n      }\n\n      return result;\n    });\n\n  }\n\n  static getVideoDetails(video) {\n    const params = {\n      part: 'statistics',\n      id: video.id,\n      key: config.youtubeApi.key\n    };\n\n    return axios.get('/', {params}).then(function(res) {\n      const result = res.data;\n      video.viewCount = result['items'][0].statistics.viewCount;\n      video.likeCount = result['items'][0].statistics.likeCount;\n\n      return video;\n    });\n  }\n}\n"]}